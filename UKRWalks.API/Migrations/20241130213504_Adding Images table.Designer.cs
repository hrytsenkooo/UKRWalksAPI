// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UKRWalks.API.Data;

#nullable disable

namespace UKRWalks.API.Migrations
{
    [DbContext(typeof(UKRWalksDbContext))]
    [Migration("20241130213504_Adding Images table")]
    partial class AddingImagestable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UKRWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bfd4e70-9d17-4a45-85e6-bac5eff4fb6d"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("51ef0d6a-2c24-4c04-a626-4125aa2a2dc4"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("609c4904-e7f2-4a96-97da-6ee03e4e0a1a"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("UKRWalks.API.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("UKRWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80530b8c-ce14-4895-8edc-4bf20e86a460"),
                            Code = "UA-KY",
                            Name = "Kyiv",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Kyiv_%28oblast%29_in_Ukraine.svg/1200px-Kyiv_%28oblast%29_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("34d44f1e-4747-45bb-9f1b-f5f2f450f10a"),
                            Code = "UA-LV",
                            Name = "Lviv",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Lviv_in_Ukraine.svg/1200px-Lviv_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("3ea8ea23-cc61-4c60-a4cd-84e3a261b2bf"),
                            Code = "UA-OD",
                            Name = "Odesa",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Odessa_in_Ukraine.svg/1200px-Odessa_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("3550e2e4-37cd-40a7-aeed-57fa6f6fc328"),
                            Code = "UA-KH",
                            Name = "Kharkiv",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Kharkiv_in_Ukraine.svg/1200px-Kharkiv_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("d3bab1cc-3c75-4b79-bb25-1c9118404e27"),
                            Code = "UA-DP",
                            Name = "Dnipro",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Dnipropetrovsk_in_Ukraine.svg/1200px-Dnipropetrovsk_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("779139d1-9db8-4c4c-a71f-e320193c7d57"),
                            Code = "UA-VN",
                            Name = "Vinnytsia",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Vinnytsia_in_Ukraine.svg/1200px-Vinnytsia_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("cf973bc0-4e43-4025-b65a-6fabb66ae76c"),
                            Code = "UA-ZP",
                            Name = "Zaporizhzhia",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Zaporizhia_in_Ukraine.svg/1200px-Zaporizhia_in_Ukraine.svg.png"
                        },
                        new
                        {
                            Id = new Guid("9fe6971e-e9c3-454f-906c-0d20b10d108c"),
                            Code = "UA-IF",
                            Name = "Ivano-Frankivsk",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/Ivano-Frankivsk_in_Ukraine.svg/275px-Ivano-Frankivsk_in_Ukraine.svg.png"
                        });
                });

            modelBuilder.Entity("UKRWalks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("UKRWalks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("UKRWalks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UKRWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
